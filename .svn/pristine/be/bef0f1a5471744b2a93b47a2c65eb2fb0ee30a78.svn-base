package com.baidu.asset.action;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.struts2.ServletActionContext;

import com.baidu.asset.bean.Asset;
import com.baidu.asset.service.AssetService;
import com.baidu.base.service.SelectDataService;
import com.baidu.util.Page;
import com.baidu.util.QueryResult;
import com.baidu.util.Request;
import com.baidu.util.Response;
import com.opensymphony.xwork2.ActionSupport;

public class AssetAction extends ActionSupport {
	private Asset asset;
	
	private AssetService assetService;
	private SelectDataService selectDataService;
	
	public Asset getAsset() {
		return asset;
	}

	public void setAsset(Asset asset) {
		this.asset = asset;
	}

	public AssetService getAssetService() {
		return assetService;
	}

	public void setAssetService(AssetService assetService) {
		this.assetService = assetService;
	}

	
	public String listPage() {
		return "list";
	}
	public String addPage(){
		
		return "addPage";
	}
	
	public void addAsset() throws Exception{
		assetService.save(asset);
		Response.write("ok");
	}
	
	public void edit() {
		assetService.update(asset);
		Response.write("true");
	}
	
	
	public void listAll(){
		List<Asset> assets =assetService.findAll();
		Response.write(JSONArray.fromObject(assets).toString());
	}
	
	
	public void assetDate() {
		HttpServletRequest request = ServletActionContext.getRequest();
		String sql="select a.id,a.num,a.name,b.type_name typename , a.buydate,c.loginname username, a.price, d.name factory,a.status, a.content from T_ASSET a,t_assettype b,t_user c,t_factory d where a.typeid=b.id and a.userid=c.id and a.factory=d.id order by to_number(a.id) desc";
		Map map = selectDataService.getListForPage(request, sql);
		JSONObject json=new JSONObject();
		json.put("total", ((Page)map.get("p")).getTotal());
		json.put("rows", map.get("resoultList"));
		Response.write(json.toString());
		
	/*	
		//当前页
		int page =Integer.parseInt(request.getParameter("page")==null?"1":request.getParameter("page"));
		//每页显示条数
		  int rows = Integer.parseInt(request.getParameter("rows")==null?"10":request.getParameter("rows"));//接受参数page和rows
		
		QueryResult<Asset> result =assetService.getScrollData((page-1)*rows,rows);
		
		Response.write(JSONArray.fromObject(result.getResultlist()).toString());*/
		
	}
	
	public String upload(){
		return "upload";
		
	}

	public SelectDataService getSelectDataService() {
		return selectDataService;
	}

	public void setSelectDataService(SelectDataService selectDataService) {
		this.selectDataService = selectDataService;
	}
	
	public void getAssetType(){
		List typeList = selectDataService.queryForList("select t.id, t.type_name typename from T_ASSETTYPE t ");
		Response.write(JSONArray.fromObject(typeList).toString());
	}
	public void getFactory(){
		Integer id = Integer.parseInt(Request.getParameter("id"));
		List facoryList = selectDataService.queryForList("select t.id , t.name from t_factory t where t.tid= "+id);
		Response.write(JSONArray.fromObject(facoryList).toString());
	}

}
